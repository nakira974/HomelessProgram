
# This file is auto-generated by mama build. Do not modify by hand!
if (CMAKE_CXX_COMPILER_ID MATCHES "Clang")
    set(CLANG TRUE)
elseif (CMAKE_CXX_COMPILER_ID MATCHES "GNU")
    set(GCC TRUE)
endif ()
set(MAMA_INCLUDE "")
set(MAMA_LIBS "")
# Set MAMA_INCLUDES and MAMA_LIBS for each platform
if (ANDROID OR ANDROID_NDK)
    set(MAMA_BUILD "android")

elseif (WIN32)
    if (MAMA_ARCH_X64)
        set(MAMA_BUILD "windows")

    elseif (MAMA_ARCH_X86)
        set(MAMA_BUILD "windows32")

    elseif (CMAKE_GENERATOR_PLATFORM MATCHES "ARM64")
        set(MAMA_BUILD "winarm")

    elseif (CMAKE_GENERATOR_PLATFORM MATCHES "ARM")
        set(MAMA_BUILD "winarm32")

    else ()
        message(FATAL_ERROR "MAMA: Unrecognized target architecture ${CMAKE_GENERATOR_PLATFORM}")
    endif ()
elseif (APPLE)
    if (IOS_PLATFORM)
        set(IOS TRUE)
        set(MAMA_BUILD "ios")
        # Always arm64

    else ()
        set(MACOS TRUE)
        set(MAMA_BUILD "macos")
        # Always x64

    endif ()
elseif (RASPI)
    set(MAMA_BUILD "raspi")
    # Always armv7

elseif (UNIX)
    set(LINUX TRUE)
    if (MAMA_ARCH_X64)
        set(MAMA_BUILD "linux")

    elseif (MAMA_ARCH_X86)
        set(MAMA_BUILD "linux32")

    else ()
        message(FATAL_ERROR "MAMA: Unrecognized target architecture")
    endif ()
else ()
    message(FATAL_ERROR "mama build: Unsupported Platform!")
    set(MAMA_BUILD "???")
endif ()

if (MSVC)
    add_definitions(-D_ITERATOR_DEBUG_LEVEL=0)
    foreach (MODE "_DEBUG" "_MINSIZEREL" "_RELEASE" "_RELWITHDEBINFO")
        string(REPLACE "/MDd" "/MD" TMP "${CMAKE_C_FLAGS${MODE}}")
        set(CMAKE_C_FLAGS${MODE} "${TMP}" CACHE STRING "" FORCE)
        string(REPLACE "/MDd" "/MD" TMP "${CMAKE_CXX_FLAGS${MODE}}")
        set(CMAKE_CXX_FLAGS${MODE} "${TMP}" CACHE STRING "" FORCE)
    endforeach (MODE)
endif ()
